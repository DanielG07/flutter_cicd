name: CI Dev

on:
  push:
    branches:
      - dev

jobs:
  dev-validate:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ vars.FLUTTER_VERSION }}
          channel: "stable"

      - name: Install Melos
        run: dart pub global activate melos

      - name: Melos bootstrap
        run: melos bootstrap

      - name: Melos analyze
        run: melos run analyze

      - name: Melos test
        run: melos run test

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: packages/flutter_application_1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  sonarqube:
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Build Wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v5.3.1
      - name: Run Build Wrapper
        run: |
          # Here goes your compilation wrapped with Build Wrapper
          # For more information, see https://docs.sonarsource.com/sonarqube-cloud/advanced-setup/languages/c-family/prerequisites/#using-build-wrapper
          build-preparation steps
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} build-command
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.3.1
        with:
          projectBaseDir: packages/flutter_application_1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          # Consult https://docs.sonarsource.com/sonarqube-server/latest/analyzing-source-code/scanners/sonarscanner/ for more information and options
          args: >
            --define sonar.cfamily.compile-commands="${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json"

  dev-build-android:
    needs: [dev-validate]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: ${{ vars.JAVA_VERSION }}

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ vars.FLUTTER_VERSION }}
          channel: "stable"

      - name: Install Melos
        run: dart pub global activate melos

      - name: Melos bootstrap
        run: melos bootstrap

      - name: Build Android App
        run: melos build_apk

      - name: Upload Android Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: packages/flutter_application_1/build/app/outputs/flutter-apk/app-release.apk

  dev-build-ios:
    needs: [dev-validate]
    runs-on: macos-latest
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - name: Set up Java
      #   uses: actions/setup-java@v3
      #   with:
      #     distribution: "zulu"
      #     java-version: ${{ vars.JAVA_VERSION }}

      # - name: Install Flutter
      #   uses: subosito/flutter-action@v2
      #   with:
      #     flutter-version: ${{ vars.FLUTTER_VERSION }}
      #     channel: "stable"

      # - name: Install Melos
      #   run: dart pub global activate melos

      # - name: Melos bootstrap
      #   run: melos bootstrap

      # - name: Build iOS App
      #   run: melos build_ios

      # - name: Upload iOS Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ios-build
      #     path: packages/flutter_application_1/build/ios/archive/*.ipa

  dev-qa-automation:
    needs: [dev-build-android, dev-build-ios]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
