name: CI Prod

on:
  push:
    branches:
      - main

jobs:
  pro-validate:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ vars.FLUTTER_VERSION }}
          channel: "stable"

      - name: Flutter pub get
        run: flutter pub get

      - name: Flutter analyze
        run: flutter analyze

      - name: Flutter test
        run: flutter test

  pro-build-android:
    needs: [pro-validate]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: ${{ vars.JAVA_VERSION }}

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ vars.FLUTTER_VERSION }}
          channel: "stable"

      - name: Flutter pub get
        run: flutter pub get

      - name: Build Android App
        run: flutter build aab

      - name: Upload Android Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: build/app/outputs/flutter-apk/app-release.aab

  pro-build-ios:
    needs: [pro-validate]
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - name: Set up Java
      #   uses: actions/setup-java@v3
      #   with:
      #     distribution: "zulu"
      #     java-version: ${{ vars.JAVA_VERSION }}

      # - name: Install Flutter
      #   uses: subosito/flutter-action@v2
      #   with:
      #     flutter-version: ${{ vars.FLUTTER_VERSION }}
      #     channel: "stable"

      # - name: Flutter pub get
      #   run: flutter pub get

      # - name: Build iOS App
      #   run: flutter build ipa

      # - name: Upload iOS Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ios-build
      #     path: build/ios/archive/*.ipa

  pro-distribute:
    needs: [pro-build-android, pro-build-ios]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - name: Download Android Artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: android-build
      #     path: .

      # - name: Download iOS Artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: ios-build
      #     path: .

      # - name: Deploy to Google Play Store
      #   uses: r0adkll/upload-google-play@v1
      #   with:
      #     serviceAccountJson: ${{ secrets.PLAYSTORE_SERVICE_ACCOUNT_JSON }}
      #     packageName: your.package.name
      #     releaseFile: app-release.aab

      # - name: Deploy to Apple App Store
      #   uses: apple-actions/upload-testflight-build@v1
      #   with:
      #     app_id: ${{ secrets.IOS_APP_STORE_ID }}
      #     api_key_id: ${{ secrets.IOS_KEY_ID_PROD }}
      #     api_key_issuer_id: ${{ secrets.IOS_ISSUER_ID_PROD }}
      #     api_key: ${{ secrets.IOS_PRIVATE_KEY_PROD }}
      #     upload_to_app_store: true
