name: CI Supabase

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
      - staging

env:
  SUPABASE_VERSION: ${{ vars.WF_SUPABASE_VERSION }}

jobs:
  tests:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      PROJECT_ID: ${{ vars.PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: $SUPABASE_VERSION

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: latest

      - name: Start Supabase
        run: supabase start

      - name: Run Database Tests
        run: supabase test db

      - name: Run Functions Tests
        run: deno test --allow-all ./supabase/functions/tests/

  validate-db:
    needs: [tests]
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}
    if: |
      github.ref_name == 'dev' ||
      github.ref_name == 'staging' ||
      github.ref_name == 'main'
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      PROJECT_ID: ${{ vars.PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: $SUPABASE_VERSION

      - name: Link to Supabase
        run: supabase link --project-ref $PROJECT_ID

      - name: Diff local vs remote schema
        id: diff
        run: |
          supabase db diff --linked > diff.sql || true
          if [ -s diff.sql ]; then
            echo "Database mismatch detected. Please review migrations before pushing."
            echo "has_diff=true" >> $GITHUB_OUTPUT
          else
            echo "No differences found."
            echo "has_diff=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload diff artifact
        if: steps.diff.outputs.has_diff == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: db-schema-diff
          path: diff.sql
    outputs:
      has_diff: ${{ steps.diff.outputs.has_diff }}

  deploy-db:
    needs: [validate-db]
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}
    if: |
      needs.validate-db.outputs.has_diff == 'false' &&
      (
        github.ref_name == 'dev' ||
        github.ref_name == 'staging' ||
        (github.ref_name == 'main' && github.event_name != 'workflow_dispatch')
      )
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      PROJECT_ID: ${{ vars.PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: $SUPABASE_VERSION

      - name: Link to Supabase
        run: supabase link --project-ref $PROJECT_ID

      - name: Backup DB before push
        run: supabase db dump --file pre_deploy_backup.sql

      - name: Upload backup DB
        uses: actions/upload-artifact@v3
        with:
          name: db-backup
          path: pre_deploy_backup.sql

      - name: Deploy to Supabase
        run: supabase db push

  deploy-functions:
    needs: [validate-db]
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}
    if: |
      github.ref_name == 'dev' || 
      github.ref_name == 'staging' || 
      (
        github.ref_name == 'main' && github.event_name != 'workflow_dispatch'
      )
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      PROJECT_ID: ${{ vars.PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: $SUPABASE_VERSION

      - name: Link to Supabase
        run: supabase link --project-ref $PROJECT_ID

      - name: Deploy to Supabase
        run: supabase functions deploy
